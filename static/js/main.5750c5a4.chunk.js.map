{"version":3,"sources":["Pages/HomePage.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","utils/prepereDataFromServer.ts","Pages/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","Pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","_jsx","className","children","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","_ref","person","slug","sex","name","Link","to","concat","cn","PeopleTable","React","memo","people","useParams","_jsxs","map","personFatherName","fatherName","personMotherName","motherName","born","died","mother","father","Loader","prepareDataFromServer","dataFromServer","_objectSpread","find","p","_person$motherName","localeCompare","_person$fatherName","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","isError","setIsError","_useState5","_useState6","isPeopleLoading","setIsPeopleLoading","getPeopleFromServer","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peopleFromServer","wrap","_context","prev","next","sent","t0","stop","useEffect","_Fragment","length","PageNavLink","text","NavLink","_ref2","isActive","Navigation","role","NotFoundPage","App","Routes","Route","path","element","index","Navigate","replace","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.5750c5a4.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const personFatherName = person.fatherName || '-';\n          const personMotherName = person.motherName || '-';\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={cn({\n                'has-background-warning': slug === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n\n              <td>{person.born}</td>\n\n              <td>{person.died}</td>\n\n              <td>\n                {person.mother\n                  ? (\n                    <PersonLink person={person.mother} />\n                  )\n                  : <p>{personMotherName}</p>}\n              </td>\n\n              <td>\n                {person.father\n                  ? (\n                    <PersonLink person={person.father} />\n                  )\n                  : <p>{personFatherName}</p>}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\nexport const prepareDataFromServer = (dataFromServer: Person[]) => {\n  return dataFromServer\n    .map(person => ({\n      ...person,\n      mother: dataFromServer.find(p => {\n        if (person.motherName?.localeCompare(p.name) === 0) {\n          return p;\n        }\n\n        return 0;\n      }),\n      father: dataFromServer.find(p => {\n        if (person.fatherName?.localeCompare(p.name) === 0) {\n          return p;\n        }\n\n        return 0;\n      }),\n    }));\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Loader } from '../components/Loader';\nimport { prepareDataFromServer } from '../utils/prepereDataFromServer';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n\n  const getPeopleFromServer = useCallback(async () => {\n    try {\n      setIsPeopleLoading(true);\n\n      const peopleFromServer = await getPeople();\n\n      setPeople(prepareDataFromServer(peopleFromServer));\n      setIsPeopleLoading(false);\n    } catch (error) {\n      setIsError(true);\n      setIsPeopleLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isPeopleLoading\n            ? <Loader />\n            : (\n              <>\n                <p\n                  data-cy=\"peopleLoadingError\"\n                  className={cn('has-text-danger', {\n                    'is-hidden': !isError,\n                  })}\n                >\n                  Something went wrong\n                </p>\n\n                <p\n                  data-cy=\"noPeopleMessage\"\n                  className={cn({\n                    'is-hidden': !!people.length,\n                  })}\n                >\n                  There are no people on the server\n                </p>\n\n                {!!people.length\n                  && (\n                    <PeopleTable people={people} />\n                  )}\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { Navigation } from './components/Navigation';\nimport { NotFoundPage } from './Pages/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n\n              <Route\n                path=\":slug\"\n                element={<PeoplePage />}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}